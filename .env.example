NODE_ENV=development

# GOOGLE OAUTH 
GOOGLE_CLIENT_ID=example-client-id.apps.googleusercontent.invalid
GOOGLE_CLIENT_SECRET=example-not-a-secret
GOOGLE_HP_REDIRECT_URI=http://localhost:3000/api/v1/auth/hp/google/callback
GOOGLE_PATIENT_REDIRECT_URI=http://localhost:3000/api/v1/auth/patient/google/callback
GOOGLE_TOKEN_INFO_URL=https://oauth2.googleapis.com/tokeninfo
GOOGLE_TOKEN_ENDPOINT=https://oauth2.googleapis.com/token
GOOGLE_SCOPE="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
GOOGLE_AUTHORIZATION_URL=https://accounts.google.com/o/oauth2/v2/auth
GOOGLE_USERINFO=https://www.googleapis.com/oauth2/v2/userinfo

# SESSION / JWT
SESSION_SECRET=CHANGE_ME_IN_RENDER
STATE=dev-state

JWT_SECRET=CHANGE_ME_IN_RENDER
JWT_EXPIRES_IN=15m
JWT_REFRESH_TOKEN_SECRET=CHANGE_ME_IN_RENDER
JWT_REFRESH_TOKEN_EXPIRES_IN=7d
JWT_EMAIL_TOKEN_SECRET=CHANGE_ME_IN_RENDER
JWT_EMAIL_TOKEN_EXPIRES_IN=15m
JWT_INVITE_ADMIN_SECRET=CHANGE_ME_IN_RENDER

# DATABASE
# For local dev only; on Render set DATABASE_URL in the dashboard
DATABASE_URL=postgresql://user:pass@localhost:5432/dbname
POSTGRES_URI=postgresql://user:pass@localhost:5432/dbname
USER=postgres
PASSWORD=postgres
DATABASE=postgres
PORT=5432
HOST=localhost
DIALECT=postgres

# EMAIL (use app password in Render; placeholders here)
EMAIL_HOST=smtp.example.invalid
EMAIL_PORT=465
EMAIL_USER=example
EMAIL_PASSWORD=example

CLIENT_URL=http://localhost:5173


OPENAI_APIKEY=OPENAI_KEY_SET_IN_RENDER
OPENAI_MODEL=gpt-4o-mini
TRANSFORMERS_CACHE=/root/.cache/huggingface


AWS_REGION=us-east-1
AWS_S3_BUCKET=your-bucket-name
AWS_ACCESS_KEY_ID=EXAMPLE_AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY=EXAMPLE_AWS_SECRET

# RABBITMQ
# On Render, set user/pass via env and use the internal hostname "rabbitmq"
RABBITMQ_URL=amqp://appuser:password@localhost:5672/
RABBITMQ_DEFAULT_USER=appuser
RABBITMQ_DEFAULT_PASS=change-me

# Scheduling
SLOT_LENGTH_MINUTES=30
