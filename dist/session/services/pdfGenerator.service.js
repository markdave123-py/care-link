"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSessionPdf = generateSessionPdf;
const PDFDocument = require("pdfkit");
function generateSessionPdf(session) {
    return new Promise((resolve, reject) => {
        const doc = new PDFDocument({ margin: 50 });
        const buffers = [];
        doc.on("data", (chunk) => buffers.push(chunk));
        doc.on("end", () => resolve(Buffer.concat(buffers)));
        doc.on("error", reject);
        const pageWidth = doc.page.width;
        const pageHeight = doc.page.height;
        doc.fontSize(60)
            .fillColor("#d0e5ff")
            .opacity(0.2)
            .rotate(-45, { origin: [pageWidth / 2, pageHeight / 2] })
            .text("H.C.S", pageWidth / 2 - 100, pageHeight / 2, {
            align: "center",
        })
            .rotate(45, { origin: [pageWidth / 2, pageHeight / 2] })
            .opacity(1);
        doc
            .rect(0, 0, pageWidth, 70)
            .fill("#0077cc");
        doc
            .fillColor("white")
            .fontSize(26)
            .font("Helvetica-Bold")
            .text("ü©∫ Session Summary Report", 60, 25);
        doc.moveDown(3);
        doc
            .roundedRect(50, doc.y, pageWidth - 100, 90, 8)
            .fill("#eaf4ff");
        doc
            .fillColor("black")
            .fontSize(12)
            .font("Helvetica")
            .text(`üìÑ Session ID: ${session.id}`, 60, doc.y + 10)
            .text(`üìÖ Date: ${session.start_time.toDateString()}`)
            .text(`‚è∞ Time: ${session.start_time.toLocaleTimeString()} - ${session.end_time.toLocaleTimeString()}`)
            .text(`üü¢ Status: ${session.status}`);
        doc.moveDown(5);
        const section = (emoji, title, content, color = "#0077cc") => {
            doc
                .moveDown()
                .roundedRect(50, doc.y, pageWidth - 100, 130, 10)
                .fill("#f7fbff");
            doc
                .fillColor(color)
                .font("Helvetica-Bold")
                .fontSize(14)
                .text(`${emoji} ${title}`, 60, doc.y + 10, { underline: false });
            doc
                .font("Helvetica")
                .fontSize(12)
                .fillColor("black")
                .text(content || "N/A", {
                align: "justify",
                indent: 20,
                width: pageWidth - 120,
            });
            doc.moveDown();
        };
        section("üìù", "Patient Symptoms", session.patient_symptoms, "#1b74e4");
        section("üß†", "Diagnosis", session.diagnosis, "#0a84ff");
        section("üíä", "Prescription", session.prescription, "#0077cc");
        section("ü©∫", "Practitioner Report", session.health_practitioner_report, "#1d4ed8");
        doc
            .moveDown(3)
            .fontSize(10)
            .fillColor("gray")
            .text("Generated by HealthCare Scheduler ‚Ä¢ Confidential Document", {
            align: "center",
        });
        doc.end();
    });
}
//# sourceMappingURL=pdfGenerator.service.js.map