// import PDFDocument = require("pdfkit");

import * as PDFDocument from 'pdfkit';

export function generateSessionPdf(session: {
  id: string;
  patient_symptoms: string;
  health_practitioner_report: string;
  diagnosis: string;
  prescription: string;
  status: string;
  start_time: Date;
  end_time: Date;
}): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    const doc = new PDFDocument({ margin: 50 });
    const buffers: Buffer[] = [];

    doc.on("data", (chunk: Buffer) => buffers.push(chunk));
    doc.on("end", () => resolve(Buffer.concat(buffers)));
    doc.on("error", reject);

    const pageWidth = doc.page.width;
    const pageHeight = doc.page.height;

    // ========== H.C.S WATERMARK ==========
    doc.fontSize(60)
      .fillColor("#d0e5ff")
      .opacity(0.2)
      .rotate(-45, { origin: [pageWidth / 2, pageHeight / 2] })
      .text("H.C.S", pageWidth / 2 - 100, pageHeight / 2, {
        align: "center",
      })
      .rotate(45, { origin: [pageWidth / 2, pageHeight / 2] }) // Reset rotation
      .opacity(1); // Reset opacity

    // ========== HEADER ==========
    doc
      .rect(0, 0, pageWidth, 70)
      .fill("#0077cc");

    doc
      .fillColor("white")
      .fontSize(26)
      .font("Helvetica-Bold")
      .text("ü©∫ Session Summary Report", 60, 25);

    doc.moveDown(3);

    // ========== METADATA BOX ==========
    doc
      .roundedRect(50, doc.y, pageWidth - 100, 90, 8)
      .fill("#eaf4ff");

    doc
      .fillColor("black")
      .fontSize(12)
      .font("Helvetica")
      .text(`üìÑ Session ID: ${session.id}`, 60, doc.y + 10)
      .text(`üìÖ Date: ${session.start_time.toDateString()}`)
      .text(`‚è∞ Time: ${session.start_time.toLocaleTimeString()} - ${session.end_time.toLocaleTimeString()}`)
      .text(`üü¢ Status: ${session.status}`);

    doc.moveDown(5);

    // ========== SECTION FUNCTION ==========
    const section = (emoji: string, title: string, content: string, color: string = "#0077cc") => {
      doc
        .moveDown()
        .roundedRect(50, doc.y, pageWidth - 100, 130, 10)
        .fill("#f7fbff");

      doc
        .fillColor(color)
        .font("Helvetica-Bold")
        .fontSize(14)
        .text(`${emoji} ${title}`, 60, doc.y + 10, { underline: false });

      doc
        .font("Helvetica")
        .fontSize(12)
        .fillColor("black")
        .text(content || "N/A", {
          align: "justify",
          indent: 20,
          width: pageWidth - 120,
        });

      doc.moveDown();
    };

    // ========== SECTIONS ==========
    section("üìù", "Patient Symptoms", session.patient_symptoms, "#1b74e4");
    section("üß†", "Diagnosis", session.diagnosis, "#0a84ff");
    section("üíä", "Prescription", session.prescription, "#0077cc");
    section("ü©∫", "Practitioner Report", session.health_practitioner_report, "#1d4ed8");

    // ========== FOOTER ==========
    doc
      .moveDown(3)
      .fontSize(10)
      .fillColor("gray")
      .text("Generated by HealthCare Scheduler ‚Ä¢ Confidential Document", {
        align: "center",
      });

    doc.end();
  });
}







// // utils/generatePdf.ts
// import PDFDocument from "pdfkit";

// export function generateSessionPdf(session: {
//   id: string;
//   patient_symptoms: string;
//   health_practitioner_report: string;
//   diagnosis: string;
//   prescription: string;
//   status: string;
//   time: Date;
// }): Promise<Buffer> {
//   return new Promise((resolve, reject) => {
//     const doc = new PDFDocument();
//     const buffers: Buffer[] = [];

//     doc.on("data", buffers.push.bind(buffers));
//     doc.on("end", () => {
//       const pdfBuffer = Buffer.concat(buffers);
//       resolve(pdfBuffer);
//     });

//     doc.on("error", reject);

//     doc.fontSize(20).text("ü©∫ Session Summary", { underline: true });
//     doc.moveDown();

//     doc.fontSize(14).text(`Session ID: ${session.id}`);
//     doc.text(`Date: ${session.time.toDateString()}`);
//     doc.text(`Status: ${session.status}`);
//     doc.moveDown();

//     doc.font("Helvetica-Bold").text("Patient Symptoms:");
//     doc.font("Helvetica").text(session.patient_symptoms || "N/A");
//     doc.moveDown();

//     doc.font("Helvetica-Bold").text("Diagnosis:");
//     doc.font("Helvetica").text(session.diagnosis || "N/A");
//     doc.moveDown();

//     doc.font("Helvetica-Bold").text("Prescription:");
//     doc.font("Helvetica").text(session.prescription || "N/A");
//     doc.moveDown();

//     doc.font("Helvetica-Bold").text("Practitioner Report:");
//     doc.font("Helvetica").text(session.health_practitioner_report || "N/A");
//     doc.moveDown();

//     doc.end();
//   });
// }







// // utils/pdfSessionReport.ts
// import PDFDocument from 'pdfkit';
// import type { Response } from 'express';

// interface SessionPDF {
//   id: string | number;
//   createdAt: Date | string;
//   diagnosis?: string;
//   prescription?: string;
//   patient: {
//     firstname: string;
//     lastname: string;
//     email: string;
//   };
// }


// export const generatePrescriptionPDF = (session: SessionPDF, res: Response) => {
//   const doc = new PDFDocument();

//   res.setHeader('Content-Type', 'application/pdf');
//   res.setHeader('Content-Disposition', `attachment; filename=session_${session.id}.pdf`);

//   doc.pipe(res);

//   doc.fontSize(18).text('Medical Session Summary', { underline: true });
//   doc.moveDown();

//   // Patient Info
//   doc.fontSize(14).text(`Patient: ${session.patient.firstname} ${session.patient.lastname}`);
//   doc.text(`Email: ${session.patient.email}`);
//   doc.text(`Date: ${new Date(session.createdAt).toLocaleDateString()}`);
//   doc.moveDown();

//   // Diagnosis & Prescription
//   doc.fontSize(16).text('Diagnosis:', { underline: true });
//   doc.fontSize(12).text(session.diagnosis || 'N/A');
//   doc.moveDown();

//   doc.fontSize(16).text('Prescription:', { underline: true });
//   doc.fontSize(12).text(session.prescription || 'N/A');

//   doc.end();
// }
